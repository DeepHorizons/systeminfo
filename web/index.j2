<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="">
    <meta name="author" content="">
    <link rel="icon" href="../../../../favicon.ico">

    <title>Singularity</title>

    <!-- Bootstrap core CSS -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.1/css/bootstrap.min.css" integrity="sha384-WskhaSGFgHYWDcbwN70/dfYBj47jz9qbsMId/iRN3ewGhXQFZCSftd1LZCfmhktB" crossorigin="anonymous">

    <!-- Custom styles for this template -->
    <link href="https://getbootstrap.com/docs/4.1/examples/starter-template/starter-template.css" rel="stylesheet">
  </head>

  <body>

    <nav class="navbar navbar-expand-md navbar-dark bg-dark fixed-top">
      <a class="navbar-brand" href="#">Navbar</a>
      <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarsExampleDefault" aria-controls="navbarsExampleDefault" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>

      <div class="collapse navbar-collapse" id="navbarsExampleDefault">
        <ul class="navbar-nav mr-auto">
          <li class="nav-item active">
            <a class="nav-link" href="#">Home <span class="sr-only">(current)</span></a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="#">Link</a>
          </li>
          <li class="nav-item">
            <a class="nav-link disabled" href="#">Disabled</a>
          </li>
          <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle" href="https://example.com" id="dropdown01" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Dropdown</a>
            <div class="dropdown-menu" aria-labelledby="dropdown01">
              <a class="dropdown-item" href="#">Action</a>
              <a class="dropdown-item" href="#">Another action</a>
              <a class="dropdown-item" href="#">Something else here</a>
            </div>
          </li>
        </ul>
      </div>
    </nav>

    <main role="main" class="container">

      <div class="starter-template">
        <h1>Search Singularity Images</h1>
        <p class="lead">
            <input id="searchbox" class="form-control mr-sm-2" type="text" placeholder="Search" aria-label="Search">
        </p>
        <p>

      <div id="here"></div>
      </div>

    </main><!-- /.container -->

    <!-- Bootstrap core JavaScript
    ================================================== -->
    <!-- Placed at the end of the document so the pages load faster -->
    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
    <script>window.jQuery || document.write('<script src="../../assets/js/vendor/jquery-slim.min.js"><\/script>')</script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js" integrity="sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49" crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.1/js/bootstrap.min.js" integrity="sha384-smHYKdLADwkXOn1EmN1qk/HfnUcbVRZyYmZ4qpPea6sjB/pTJ0euyQp0Mk8ck+5T" crossorigin="anonymous"></script>
    
    <script>
        function handleErrors(response) {
            if (!response.ok) {
                throw Error(response.statusText);
            }
            return response;
        }
        
	function get_search_string() {
	    return document.getElementById('searchbox').value;
	}
        function search(query) {
            fetch('?query=' + query).then(response => {return response.json()}
            ).then(json => {
		// JSON data: `{"results": {<image name str> : {<package name str>: {"from": <'apt' or 'pip' str>, "name": <package name str>, "version": <package version str>}}}}`
		// First we see if the query is still valid. Sometimes we get responses for old requests
		let query = json['query'];
		let current_query = get_search_string();
		if(query != current_query) {
		    // This response is old, stop here
		    console.log("Got old query: " + query);
		    console.log("Current query: " + current_query);
		    return;
		}

		// Create the list element we use to display
		// * image_name:
		//     * package_name: version
		//     ...
		let d = document.getElementById('here');
		let results = json['results'];
		let root_ul = document.createElement('ul');
		root_ul.classList.add('list-group');
		for(let image_name in results){
		    let packages = results[image_name];
                    let image_ul = document.createElement('ul');
		    image_ul.classList.add('row');
                    for(let package_name in packages){
                        let package_data = packages[package_name];
                        let package_version = package_data['version'];
                        let package_from = package_data['from'];

                        let package_li = document.createElement('li');
			package_li.classList.add('list-group-item');
                        image_ul.appendChild(package_li);
                        package_li.innerHTML = package_name + ': ' + package_version;
		    }
                    // Every element in a <ul> list should be an <li>
                    let image_li_wrapper = document.createElement('li');
	            let collapsable_link = document.createElement('a');
	            collapsable_link.href = '#' + image_name;
	            collapsable_link.setAttribute('data-toggle', 'collapse');
		    collapsable_link.innerHTML = image_name + ': ';
	            image_ul.id = image_name;
		    image_ul.classList.add('collapse');
		    image_li_wrapper.classList.add('list-group-item');
		    image_li_wrapper.appendChild(collapsable_link);
		    image_li_wrapper.appendChild(image_ul);
	            root_ul.appendChild(image_li_wrapper);
		}
		d.innerHTML = '';
        d.appendChild(root_ul);
        })
        }
        function handler(event)
        {
            let query = event.target.value;
            search(query);
        }
        document.querySelector('#searchbox').oninput=handler;  // Handles all changes
        //document.querySelector('#searchbox').onchange=handler;  // handles changes when losing focus
    </script>
  </body>
</html>
